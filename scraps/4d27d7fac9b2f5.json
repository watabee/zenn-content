{
  "title": "【Google I/O 2023】What's new in Android",
  "closed": false,
  "archived": false,
  "created_at": "2023-05-25",
  "comments": [
    {
      "author": "watabee",
      "created_at": "2023-05-25",
      "body_markdown": "# What's new in Android\nhttps://www.youtube.com/watch?v=qXhjN66O7Bk&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=4\n\n## Privacy & Security (0:46~)\n\nAndroid 14 での変更点について\n\n### Partial media access (1:08~)\n\n- アプリがパーミッションをリクエストした際、ユーザーはメディアへの部分的なアクセスを許可でき、許可したもののみ MediaStore でアクセス可能\n  - READ_MEDIA_IMAGES, READ_MEDIA_VIDEOS, READ_MEDIA_VISUAL_USER_SELECTED\n- 複雑さを回避するために、ストレージアクセスへの許可をするのではなく、Photo Picker を使うことを推奨\n\n### Safety information (1:38~)\n\n- 位置情報のパーミッション許可のダイアログにクリック可能なセクションを表示\n  - アプリは位置情報データをサードパーティに共有することが概要として記載されている\n  - このセクション部分をクリックすると、アプリがなぜデータを共有するかが表示され、ユーザーが理由を理解できるようになっている\n\n### Full Screen Intent Notifications (2:03~)\n\n- Android 14 から、アプリは Full Screen Intent のパーミッションのチェックとユーザーからのリクエストが必要になる\n  - `android.permission.USE_FULL_SCREEN_INTENT` のパーミッションが必要\n  - ユーザーは設定画面でパーミッションの ON / OFF ができる\n- ターゲット SDK によらず通話アプリとアラームアプリのみが Full Screen Intent を使用する権限を持つべきというように、App store のポリシーが変更される\n\n\n### 公開されていないコンポーネントに対して明示的な Intent を作る (2:44~)\n\n```kotlin\nval intent = Intent(\"com.example.app.PAY\")\nintent.setPackage(\"com.example.app\")\nstartActivity(intent)\n```\n\n### ブロードキャストレシーバーに対するエクスポート動作の指定 (2:50~)\n\nTargte SDK バージョンが34 の場合、システムのブロードキャストのためではないレシーバーを実行時に登録する際に `RECEIVER_EXPORTED` か `RECEIVER_NOT_EXPORTED` を指定する。\n\n```kotlin\ncontext.registerReceiver(broadcastReceiver, intentFilter, RECEIVER_EXPORTED)\ncontext.registerReceiver(broadcastReceiver, intentFilter, RECEIVER_NOT_EXPORTED)\n```\n\n### Target SDK バージョン 23 未満のアプリはインストール不可 (3:00~)\n\n表題の通り。\n\n\n### Partial Screensharing (3:20~)\n\n画面全体を共有するのではなく、特定のアプリのみを共有できる。 何らかのアプリとビデオ通話といったマルチタスクのアプリなどに有効。\n\n```kotlin\n// 今まで\nval manager = getSystemService<MediaProjectionManager>()\nval intent = manager?.createScreenCaptureIntent()\n```\n\n```kotlin\n// Android 14\nval manager = getSystemService<MediaProjectionManager>()\nval intent = manager?.createScreenCaptureIntent(\n    MediaProjectionConfig.createConfigForUserChoice()\n)\n\n// or \nval intent = manager?.createScreenCaptureIntent(\n    MediaProjectionConfig.createConfigForDefaultDisplay()\n)\n```\n\nAndroid 14 では MediaProjection のコールバックに2つのメソッドが導入された。\n\n```kotlin\nobject : MediaProjection.Callback() {\n    override fun onCapturedContentResize(width: Int, height: Int) {\n        // ...\n    }\n    \n    override fun onCapturedContentVisibilityChanged(isVisible: Boolean) {\n        // ...\n    }\n}\n```\n\n### Health Connect (4:11~)\n\nアプリは Health Connect で端末上にあるユーザーのヘルスデータへアクセスできる。\nこれによってユーザーはヘルスデータを一箇所で見る、プライバシーコントロールを設定する、お気に入りのアプリ間でデータを教諭する、といったことができる。\n\n詳細は [What's new in Android Health](https://www.youtube.com/watch?v=hlyC0I6v9ic&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=25&pp=iAQB) のセッションを参照。\n\n\n### Reduce reliance on passwords with passkey support (4:52~)\n\n- Android 14 からパスワードなしで認証できるパスキーがサポート\n- Credential Manager ではパスキーに加え従来のパスワード、フェデレーションによるサインイン方式を統合\n- 現状アルファ版の Jetpack Credential Manager ライブラリでは Android 5 以上からパスキーをサポート\n- 詳細は [How to reduce reliance on passwords in Android apps with passkey support](https://www.youtube.com/watch?v=36peNZUlgzU&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=34&pp=iAQB) のセッションを参照\n\n\n### Privacy Sandbox (6:27~)\n\n- プライバシーサンドボックスとは、モバイルデバイスのユーザーのプライバシーを強化し、広告の品質を維持することに焦点を当てている\n- 2つの developer プログラムがある\n  1. Developer Preview\n  2. Beta Program \n- Privacy Sandbox の API の影響をテストするための新しいツールをリリース\n- Privacy Sandbox を簡単に統合するための Jetpack のライブラリも提供\n  - `androidx.privacysandbox.ads:ads-adservices:1.0.0-alpha01`\n\n### Attribution across mobile web browsers and Android apps (7:24~)\n\n- Web とアプリ間のアトリビューションは現在 Chrome と Android で利用可能\n- アプリでコンバージョンが発生した場合に、Web で表示された広告を評価したり、その逆も可能\n- 詳細は以下のセッションを確認\n  - [10 things to know about the Privacy Sandbox on Android](https://www.youtube.com/watch?v=rOtYqxaSnco&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=36&pp=iAQB)\n  - [Getting started with Attribution Reporting](https://www.youtube.com/watch?v=mYVi3yL-GNI&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=102&pp=iAQB)\n\n\n## Form factors (8:06~)\n\n- ユーザーは全てのアプリをマルチウィンドウモードで表示でき、またアプリの設定に関係なくデバイスを回転させることができる\n- アプリが固定の向きやリサイズできないように制限した場合、アプリは互換モードになりシステムによってレターボックス化される\n  - goo.gle/letterboxing\n- Activity の向きは固定せずにリサイズ可能にしておくことを推奨\n- 折りたたみ端末やレターボックスによって、アスペクト比や UI の向きとカメラセンサーの向きが一致するとは限らなくなった\n  - goo.gle/introducing-camera-viewfinder\n  - Jetpack の CameraX、Camera2 ではこの辺のハンドリングをサポート\n  - 詳細は [Building high quality Android camera experiences](https://www.youtube.com/watch?v=rNe2xGKjtvc&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=33&t=77s&pp=iAQB) のセッションをチェック\n- 大きい画面サイズや折りたたみ端末の開発については [How to build great Android apps for large screens and foldables](https://www.youtube.com/watch?v=5JQjk3ZqPWc&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=21&pp=iAQB) のセッションをチェック\n\n\n### Activity embedding (10:16~)\n\n- 複数の Activity を持つアプリでは、activity embedding によって一つ以上の Activity を並べて表示することができるので、アダプティブレイアウトの実装が簡単になる\n- これは XML によって設定でき、変更が少なく、activity embedding がサポートされていなければ既存の動作のままになる\n- [Optimize activity-based apps for large screens](https://www.youtube.com/watch?v=zx20-3GSdHw&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=22&pp=iAQB) のセッションをチェック\n\n### Keyboard support (10:49~)\n\n- [Best practices for game development across platforms](https://www.youtube.com/watch?v=I5ubmoSgaXE&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=26&pp=iAQB) のセッションをチェック\n\n\n### Jetpack Glance (12:17~)\n\n- Jetpack Glance は現在ベータ版\n  - ウィジェットを Jetpack Compose で構築できる\n\n## Jetpack Compose (12:46~)\n\n### Compose for TV がアルファ版\n\n- コンテンツのスクロールとかフォーカスなどの TV 特有のユースケースをサポート\n- [What's new with TV and intro to Compose](https://www.youtube.com/watch?v=_X4tswgV67Y&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=27&pp=iAQB) のセッションをチェック\n\n### Modifiers (14:02~)\n\n- 昨年10月に modifier を新しくより効率的なシステムにするためのマイグレーションを開始 => 2023年5月にリリース\n- 平均して22%のパフォーマンス改善\n- modifier を使うにあたっての変更はなく、今まで通り使える\n\n\n### Text の改善 (14:24~)\n\n- 最新の emoji バージョンのサポート\n- スクロール可能なコンテナ内でキーボードを表示するとすぐに非表示になるという TextField の不具合を修正\n- テキストのカスタマイズ\n  - `TextStyle.drawStyle` を使ったアウトラインテキスト\n  - `TextStyle.hyphens` を使ったハイフンのサポート\n  - `TextStyle.lineBreak` を使った改行の振る舞いの設定\n  - `minLines` による表示できる最小の行の設定\n  - `Modifier.basicMarquee` によるテキストの移動\n\n### 新しいレイアウト (14:40~)\n\n- Pager \n- Flow Layout\n\n### Compose のライブラリ (14:58~)\n\n- Glide\n- Google Maps\n\n\n### Compose Material 3 (15:08~)\n\n- バージョン1.1\n- 新しいコンポーネント\n  - Bottom sheets\n  - Date/time picker\n  - Searchbar\n  - Tooltips\n  - など\n- New codelab\n  - Material Design 3 in Compose\n- [Build modern Android apps with Material You for Compose](https://www.youtube.com/watch?v=tu0UtDGC31A&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=63&pp=iAQB) のセッションをチェック\n\n\n### Compose Tools in Giraffe (15:37~)\n\n- Live Edit がデフォルトで有効\n- `@Preview` の UX の改善\n- Animation Preview のサポート\n\n### Compose Tools in Hedgehog (15:49~)\n\n- デバッガで Compose State の情報を表示\n- Multipreview のテンプレート\n- Visual Lint\n- `@Preview` での Accessibility Test Framework のサポート\n- `@Preview` でのスクリーンショットテスト\n- [Debugging Jetpack Compose](https://www.youtube.com/watch?v=Kp-aiSU8qCU&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=38&pp=iAQB) のセッションをチェック\n\n\n## Foreground Services (16:25~)\n\n- Android 14 をターゲットにしたアプリでは、Foreground Service の実行のためにタイプの指定と、タイプごとの Foreground Service のパーミッションが必須になった\n- Android 14 では Foreground Service の代わりとして、ユーザーが開始したデータ転送を目的とした API を導入\n\n\n以下は Foreground Service のタイプの指定と、タイプによるパーミッションの指定の例。\n`FOREGROUND_SERVICE` のパーミッションは API 28 から追加されている。\n\n```xml\n<manifest ...>\n  <uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\" />\n  <uses-permission android:name=\"android.permission.FOREGROUND_SERVICE_HEALTH\" />\n  \n  <application ...>\n    <service\n      android:name=\".MyFitnessService\"\n      android:foregroundServiceType=\"health\"\n      android:exported=\"false\"\n      android:process=\":trackerProcess\">\n    </service>\n  </application>\n</manifest>\n```\n\n## Machine Learning\n\n### ML Kit on Android (17:38~)\n\n- API の更新\n    - Barcode\n    - Pose detection\n    - Text recognition\n    - Digital ink recognition\n    - Smart Reply\n- 新しい API\n    - Face mesh (beta)\n    - Document scanner (Q4)\n\n### Android's custom ML stack\n\nカスタムの ML スタックを使うことで自身の ML モデルを導入でき、APK のサイズを減らすことができる。\n3つの主な更新がある。\n\n1. TensorFlow Lite が Google Play services に\n2. デリゲートによる Hardware acceleration\n3. Acceleration Service がベータに\n\n詳細は [How to build smarter Android apps with on-device Machine Learning](https://www.youtube.com/watch?v=BpthRGc3bM0&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=43&pp=iAQB) のセッションを参照。\n\n\n## Android Runtime (ART) 14 (18:27~)\n\n- Java 17 の言語機能をサポート\n- 新しいガベージコレクタ\n    - コードサイズを10%削減\n    - ヒープメモリのピークを最大50%まで削減\n- 現在の ART のバージョンである ART 13 では、Android 12 の端末のアップデートに対応し、アプリの起動時間を最大30%改善した\n- ART 14 では Android 12 以降の端末が最新の ART の機能を受けることができる\n\n## Kotlin (19:14~)\n\n- 最新の情報は [What's new in Kotlin for Android](https://www.youtube.com/watch?v=QGtB--ABiNM&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=39&pp=iAQB) のセッションをチェック\n- 新しい K2 コンパイラはビルド速度が2倍まで改善\n- Android Studio Giraffe から Gradle のビルドスクリプトがデフォルトで Kotlin になった\n- kapt より KSP (Kotlin Symbol Processing) を使うとよい\n- Kotlin Multiplatform のサポートを継続して取り組んでいる\n\n## Predictive Back (19:45~)\n\n- Android 13 からジェスチャーナビゲーションの改善のために predictive back が導入された\n    - スワイプで戻る際の戻り先のプレビューをユーザーに表示する\n- Android 14 ではアプリに predictive back のアニメーションを追加\n    - Activity から Activity へ戻るアニメーションを含む\n- Android 14 にマイグレーションする際に、各 Activity ごとにオプトインできる\n    - `android:enableOnBackInvokedCallback=true|false` を各 Activity ごとに設定していく\n- AndroidX の Activity のバージョンを最新にし、Compose であれば `BackHandler` を、View システムであれば `onBackPressed` コールバックを使う\n- 詳細は [Building for the future of Android](https://www.youtube.com/watch?v=WMMPXayjP8g&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=35&pp=iAQB) のセッションをチェック\n\n## New design hub (20:56~)\n\n- d.android.com/design/ui\n- Android のデザインのためのドキュメントで starter kits をダウンロードできる\n\n\n## Ultra HDR (21:15~)\n\n- Android 14 で HDR 10ビット圧縮静止画像がサポートされた\n    - これにより写真を撮影する際にセンサーからの情報をより多く保持でき、結果的に画質が向上する\n- Ultra HDR のために後方互換性のある JPEG フォーマットを設計中\n\n\n## Media3 (21:36~)\n\n- Jetpack の Media3 ライブラリの 1.0 が最近リリースされた\n    - HDR フォーマットのサポート\n    - ビデオ編集\n    - transcoding APIs \n- ExoPlayer は Media3 に含まれる\n- Media や Camera に関するセッションは以下をチェック\n    - [Creating high-quality Android media experiences](https://www.youtube.com/watch?v=sv9ICtooWBc&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=32&pp=iAQB)\n    - [Building high quality Android camera experiences](https://www.youtube.com/watch?v=rNe2xGKjtvc&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=33&t=77s&pp=iAQB)\n\n\n## Personalization (22:22~)\n\nAndroid Studio Giraffe 以降ではロケールファイルの自動生成をサポートし、Android 13 から導入されたアプリごとの言語設定機能の統合を簡単にする。\n\n```groovy\nandroid {\n    androidResources {\n        generateLocaleConfig true\n    }\n}\n```\n\nAndroid 14 では、新しい LocaleManager API を使ってユーザーが設定画面でより関連のある言語を設定するための設定ができる。\n\n```kotlin\nlocaleManager.overrideLocaleConfig = LocaleConfig(\n    LocaleList.forLanguageTags(regional_locales)\n)\n```\n\nまた Android 14 では、ユーザーは好みの気温の単位や最初の週の選択をすることができる。\n\n```kotlin\nLocalePreferences.getTemperatureUnit()\nLocalePreferences.getFirstDayOfWeek()\n```\n\n### Supporting Grammatical Inflection (23:22~)\n\nAndroid 14 から Grammatical Inflection API が追加された。\nこれによって性別によって区別された文字列リソースを作成できる。\n詳細は [Building for the future of Android](https://www.youtube.com/watch?v=WMMPXayjP8g&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=35&pp=iAQB) のセッションをチェック。\n\n\n### Sharing updates (23:59~)\n\n- システムのシェアのシートが app actions のカスタマイズにサポート\n    - `Intent.EXTRA_CHOOSER_CUSTOM_ACTIONS`\n- 新しいプレビュー UI\n    - カルーセルで複数の画像、ビデオサムネイルをプレビューでき、画像とリンクの両方をシェアできる\n- ダイレクトシェアの共有先のランキング品質を向上\n    - ダイレクトシェアのランキングの改善のため、アプリは `ShortcutInfoCompat.Builder#addCapabilityBinding(\"actions.intent.SEND_MESSAGE\")` でレポートできるようになった\n\n\n### Non-linear font scaling (24:42~)\n\n- Android 14 から最大200%までの非線形フォントスケーリングが追加された\n    - 大きいフォントサイズほどあまり拡大されなくなる\n- テキストサイズは SP 単位で指定する\n- sp と px 間の変換は TypedValue の `applyDimension()` と `deriveDimension()` を使う\n\n\n### New Accessibility APIs (25:00~)\n\n詳細は [What's new in Android Accessibility](https://www.youtube.com/watch?v=w1Fqx_2SRro&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=5&pp=iAQB) をチェック。\n\n\n## Android Studio\n\n### Android Studio Giraffe (25:47~)\n\n- Device Explorer\n- New UI (Opt-in)\n- 新規プロジェクト時にビルドスクリプトの Kotlin スクリプトと Gradle Version Catalog がオプトイン\n- Android Gradle Plugin によるアプリごとの言語設定のサポート\n- Live Edit for Jetpack Compose\n- Gradle Version Catalog のサポート\n- Compose Animation Preview\n- バグレポートの統合\n\n### Android Studio Hedgehog (26:06~)\n\n- Studio Bot\n- Lite Mode\n- Build Analyzer\n- Compose Visual Lint & Accessibility Test\n- Host-side Screenshot Testing\n- Gradle Managed Devices on Firebase\n- Baseling Profiles Gradle Plugin\n    - goo.gle/android-perf-news-io23\n    - R8 と Dex Reordering によるアプリの起動時間と全体の UI パフォーマンスの改善\n        - 起動時に必要となるコードをプライマリの dex ファイルに配置し、起動時以外のコードを別の dex ファイルに配置\n- App Quality Insights + Android Vitals\n- Espresso Device API\n- Power profiler\n- Layout inspector integrations into running device window\n\n詳細は [What's new in Android development tools](https://www.youtube.com/watch?v=7lubRrkxagk&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=37&pp=iAQB) のセッションをチェック。\n\n\n## Architecture\n\n### Kotlin Maltiplatform Jetpack Libraries (28:28~)\n\n- Annotations 1.7.0-alpha02\n- Collections 1.3.0-alpha04\n- DataStore 1.1.0-alpha03\n\n\n### Architecture Guidance (28:43~)\n\n- 新しいアーキテクチャガイドを追加\n    - Configuration Changes のハンドリングのベストプラクティスなど\n    - goo.gle/android-arch\n- [Best practices for saving UI state on Android](https://www.youtube.com/watch?v=V-s4z7B_Gnc&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=40&pp=iAQB) のセッションをチェック\n\n\n### Paging Test (29:20~)\n\n- 新しい Paging のテスト API \n- goo.gle/paging-test\n"
    }
  ]
}