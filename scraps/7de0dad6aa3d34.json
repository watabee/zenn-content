{
  "title": "【Google I/O 2023】What's new in Firebase",
  "closed": false,
  "archived": false,
  "created_at": "2023-05-25",
  "comments": [
    {
      "author": "watabee",
      "created_at": "2023-05-25",
      "body_markdown": "# What's new in Firebase\nhttps://www.youtube.com/watch?v=emIxn-f9bK0&list=PLOU2XLYxmsIIwZQkAPhJZg8jaNrrHk1DH&index=8\n\n## Cloud Functions for Firebase (2:13~)\n\n- 昨年第二世代の Cloud Functions のパブリックプレビューを公開\n    - リクエストのタイムアウトを設定して実行できる\n    - 最大32GBのメモリを搭載したインスタンス\n    - コンピュートリソースをより細かく制御できるので、function のコストとパフォーマンスをさらに最適化できる\n- シングルインスタンスで複数のリクエストを同時にハンドリングできる\n    - コールドスタートの削減\n    - レイテンシーの改善\n    - コストが抑えられる\n- 各 Cloud Function は最大1000リクエストを並列にハンドリングできる\n- Cloud Functions は現在多くのイベントに応答できる\n    - 例\n        - Crashlytics のイベント\n        - Performance Monitoring のイベント\n- 先月、第二世代の Cloud Functions に Firestore のトリガーがサポートされた\n- 第二世代の Cloud Functions にパブリックプレビューとして Python がサポートされた\n    - Firebase CLI を使うと Cloud Functions を Python か Node のどちらかを選択して、Functions を使用するためのコードを生成してくれる\n\n\n## Firebase Extensions (7:13~)\n\n- Google やサードパーティによってメンテナンスされたオープンソースの extension で、リッチなエコシステムを提供\n    - 例\n        - Full Text Search (Algolia)\n        - Manage Marketing (Mailchimp)\n        - Send Messages (Twillo)\n- Extension は Google のサーバレスのインフラストラクチャ上に構築されるので、自動的にスケールされる\n- 新しい Extension として PaLM API を使った chat bot がパブリックプレビューに\n    - Google の最新の generative language API と Firestore インスタンスを繋げる\n- https://extensions.dev\n- Extension の作成と公開が誰でもできるようになった（ベータ）\n\n\n## Firestore (10:37~)\n\n- 昨年 `count` のクエリのサポートを発表\n\nFirestore では以前から `In` と `Array-Contains-Any` をサポートしている。\n例えば以下のようなクエリで、`neighborhood` が `Chelsea` か `SoHo` のレコードを取得できる。\n\n```kotlin\nval hotels = firestore.collection(\"hotels\")\nval snapshot = hotels.where(\n    Filter.InArray(\"neighborhood\", listOf(\"Chelsea\", \"SoHo\"))\n)\n```\n\n今回 `OR` クエリがサポートされ、複数のフィールドの複数の条件を組み合わせることができるようになった。\n\n```kotlin\nval hotels = firestore.collection(\"hotels\")\nval snapshot = hotels.where(\n    Filter.or(\n        Filter.InArray(\"neighborhood\", listOf(\"Chelsea\", \"SoHo\")),\n        Filter.greaterThanOrEqualTo(\"stars\", 4)\n    )\n)\n```\n\n`orderBy` も組み合わせることができる。\n\n```kotlin\nval hotels = firestore.collection(\"hotels\")\nval snapshot = hotels.where(\n    Filter.or(\n        Filter.InArray(\"neighborhood\", listOf(\"Chelsea\", \"SoHo\")),\n        Filter.greaterThanOrEqualTo(\"stars\", 4)\n    )\n).orderBy(\"stars\", Query.Direction.DESCENDING)\n```\n\n## AppCheck (12:58~)\n\n- AppCheck では Firebase、Cloud、カスタムのバックエンドリソースに対して未承認のアクセスから保護する\n- AppCheck は多くの Firebase サービスを保護しているが、今日から Identity Platform を使用した Firebase Authentication を追加\n- Unity と C++ の SDK が利用可能になった\n    - ゲームのチート行為からの保護\n- Replay Attack の対策として Replay Protection がサポートされた\n\n\n## Terraform (15:16~)\n\n- Firebase は Terraform をサポート\n    - Firebase Project\n    - Firebase Apps\n    - Cloud Firestore\n    - Cloud Storage for Firebase\n    - Firebase Realtime Database\n    - Firebase Authentication\n    - Firebase Security Rules (for Cloud Firestore and Cloud Storage)\n- https://firebase.google.com/docs/projects/terraform/get-started\n\n\n## Web Frameworks (17:10~)\n\n- 昨年、Firebase Hosting で Next.js や Angular Universal といった Web フレームワークのデプロイを簡単に行えるようになった\n    - `firebase deploy` コマンドを実行すると、CLI は自動的にどのフレームワークを使っているかを判定し、ビルドの実行、（必要に応じて）Cloud Functions の作成、その他の必要な設定のセットアップを行う\n- Astro、SvelteKit、Nuxt のサポートを追加\n- さらに Flask と Django の実験的サポートも追加\n- 現在 Firebase Hosting に Preview Channel の機能がある\n    - サイトに異なるバージョンをデプロイでき、指定した時間以降に有効期限が切れるプレビューの URL が生成される\n    - これは静的なコンテンツしかサポートされていなかった\n- そこで Dynamic Preview Channels をサポート\n    - Astro、Next.js、Angular Universal といったフレームワークで作られたサイトのプレビューを共有できるようになった\n\n## その他 (20:33~)\n\n### Flutter (20:33~)\n\n- Firebase Hosting に Flutter Web をサポート\n\n### Android SDK の改善 (22:01~)\n\n- Android SDK を改善し、Android の起動時間が速くなった（約3% でこれは 20ms 程度）\n    - 効率的なスレッドプール\n    - バックグラウンドワーカー\n    - 必要になるまで初期化処理を遅延\n\n\n### Android Studio (23:08~)\n\n- 昨年の Google I/O で App Quality Insights で Crashlytics のクラッシュデータが確認できるようになった\n- Android Studio Flamingo で App Quality Insights は stable channel になった\n- 最新の Android Studio の Canary バージョンでは、コードナビゲーションを改善した\n\n\n### App Distribution (24:53~)\n\n- In-App Feedback\n    - Android でサポート\n    - 端末を振るとベータテスターはフィードバックを送信できる\n        - スクリーンショットを含めることができる\n    - フィードバックは Jira や Slack などにも送ることができる\n        - Cloud Functions で通知を受け取って、Jira などに反映させるようにする\n        - https://firebase.google.com/docs/app-distribution/collect-feedback-from-testers#send-new-feedback-third-party-tools\n\n\n### Remote Config (26:34~)\n\n- Real-time Remote Config\n    - リアルタイムの更新ができるようになった\n    - Android、iOS、Unity でサポート\n\n```swift\nprivate func setupRemoteConfig() {\n    let remoteConfig = RemoteConfig.remoteConfig()\n    remoteConfig.addOnConfigUpdateListener { configUpdate, error in\n        guard let configUpdate, error == nil else { return }\n        remoteConfig.activate()\n    }\n}\n```\n"
    }
  ]
}